#BlueJ class context
comment0.target=CalculatorInterface
comment1.params=
comment1.target=void\ run()
comment10.params=array
comment10.target=Client[]\ sortClientList(Client[])
comment10.text=\r\n\ Bonus/Extra\ work\:\ This\ method\ will\ use\ for\ sorting\ the\ display\ client\ list\ in\ an\ alphabetic\ order\ \r\n
comment11.params=
comment11.target=void\ addAccount()
comment11.text=Method\:\ This\ method\ will\ use\ for\ adding\ a\ acount\r\n\ Condition\ 1\:\ The\ client\ will\ able\ to\ create\ 2\ accounts\ ONLY\r\n\ Condition\ 2\:\ The\ method\ will\ get\ all\ the\ user\ input\ and\ set\ it\ to\ the\ client\ class\ method\ called\ addAcc(-,-,-,-)\r\n\ Method\ 1\:\ checkAccountSpace()\ -\ This\ method\ created\ in\ Client\ class\ to\ chcek\ the\ space\ of\ the\ client's\ account\r\n
comment12.params=
comment12.target=void\ displayAccount()
comment12.text=\r\n\ Method\:\ This\ method\ will\ display\ a\ account\ of\ client\r\n
comment13.params=
comment13.target=void\ deleteAccount()
comment13.text=\r\n\ This\ method\ will\ use\ for\ deleting\ a\ client\r\n
comment14.params=
comment14.target=void\ saveInFile()
comment14.text=\r\n\ This\ method\ will\ use\ for\ save\ the\ information\ in\ a\ .txt\ format\ file\r\n
comment2.params=args
comment2.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=void\ showOption()
comment4.params=
comment4.target=void\ addClient()
comment4.text=\r\n\ Method\:\ This\ method\ will\ use\ for\ add\ a\ client\r\n\ Check\ condition\ 1\:\ The\ method\ will\ only\ allow\ to\ add\ 5\ clients,\ If\ the\ user\ insert\ more\ that\ 5\ clients\ the\ program\ will\ show\ an\ error\ message\r\n\ Check\ condition\ 2\:\ If\ the\ client\ name\ already\ exists,\ the\ prgram\ will\ show\ an\ error\ message\r\n
comment5.params=
comment5.target=void\ deleteClient()
comment5.text=\r\n\ Method\:\ This\ method\ will\ use\ for\ delete\ a\ client\r\n\ Check\ condition\ 1\:\ The\ method\ will\ check\ if\ the\ client\ exist\ or\ not\ in\ the\ system\ and\ then\ perform\ the\ delete\ action\r\n\ Check\ condition\ 2\:\ If\ there's\ no\ client\ (Empty)\ in\ the\ system\ the\ program\ will\ show\ ERROR\ message\ right\ away\r\n\ Method\ used\ 1\:\ Client[]\ listRearragane(Client[]\ client)\ -\ This\ method\ will\ rearrange\ the\ array\ list\ after\ deleting\ a\ client.\ For\ example\:\ If\ the\ user\ delete\ the\ client\ number\ 4,\ Accoding\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ to\ java,\ the\ list\ will\ be\ "1,2,3,5";\ To\ avoid\ that\ we\ need\ to\ rearrange\ the\ list\ so\ the\ next\ one\ will\ come\ up\ and\ match\ the\ array\ sequence\r\n\ Method\ used\ 2\:\ clientExists(-)\ -\ This\ method\ will\ detarmine\ if\ the\ client\ exist\ or\ not\ within\ the\ system\r\n
comment6.params=client
comment6.target=Client[]\ listRearragane(Client[])
comment7.params=nameCheck
comment7.target=int\ clientExists(java.lang.String)
comment7.text=\r\nThis\ method\ will\ use\ within\ the\ Delete\ Client\ method\r\nReason\:\ This\ method\ will\ check\ if\ there's\ any\ client\ exist\ or\ not\ to\ delete\ within\ the\ system\r\n
comment8.params=
comment8.target=void\ displayClient()
comment8.text=Method\:\ This\ will\ use\ for\ displaying\ a\ client\r\nCondition\ 1\:\ This\ method\ will\ check\ first\ if\ any\ client\ exist\ in\ the\ system,\ show\ error\ otherwise\r\nCondition\ 2\:\ Then\ ask\ for\ the\ client\ name\ and\ check\ if\ the\ specific\ client\ exists\ in\ the\ system\r\n
comment9.params=
comment9.target=void\ displayAllClients()
comment9.text=Method\:\ This\ method\ will\ display\ all\ the\ clients\ exist\ in\ the\ system\r\nCondition\ 1\:\ If\ there's\ no\ client\ exist\ in\ the\ system,\ the\ program\ will\ show\ an\ error\r\nMethod\ used\ 1\:\ \ Client[]\ sortClientList(Client[]\ array)\ -\ This\ method\ is\ used\ for\ sorting\ the\ list\ of\ client\ in\ an\ alphabatic\ order\ by\ name\ (Extra\ work)\r\n
numComments=15
